address = c('650-103 mangpo-dong, yeongtong-gu, suwon, gyeonggi-do, south korea','1021 tongil-ro, jingwan-dong, eunpyeong-gu, seoul, south korea','20 seohyeon-ro 180(baekpalsip)beo, seohyeon-dong, bundang-gu, seongnam-si, gyeonggi-do, south korea','100-1 beomgok-ri, hwayang-eup, cheongdo, gyeongsangbuk-do, south korea','436-8 oncheon 1(il)-dong, dongnae-gu, busan, south korea','918 yuhak-ro, gasan-myeon, chilgok-gun, gyeongsangbuk-do, south korea','72-10 seongdang-dong, dalseo-gu, daegu, south korea','81 daemyeong-ro, daemyeong 10(sip)-dong, nam-gu, daegu, south korea','916 soro-ri, chunyang-myeon, bonghwa-gun, gyeongsangbuk-do, south korea'),
korean_name = c('수원 생명샘교회','은평 성모병원','분당 제생병원','청도 대남병원','부산 온천교회','칠곡 밀알 사랑의집','대구 한마음아파트','대구 신천지 교회','봉화 푸른 요양원'),
english_name = c('Soowon Saengmyungsame Church','Eunpyung Sungmo Hospital','Boondang Jesaeng Hospital','Chungdo Daenam Hospital','Busan Onchun Church','Chilgok Milal Sarang House','Daegu Hanmaeum Apartment','Daegu Sinchunji Church','Bonghwa Pureun Clinic'),
n_of_infections= c(10,14,11,118,34,22,46,4482,51))
# Pre-processing
group_infec_2 <- group_infec %>% select(lon,lat,korean_name,english_name,n_of_infections) %>%
rename(latitude2 = lat, longitude2 = lon, id = english_name) %>%
as.data.table()
group_infec_3 <- group_infec_2[, list(label=HTML(
paste(sep = "<br>",
paste("G.I(eng): ", id),
paste("G.I(kor): ", korean_name),
paste("Num of infects:", n_of_infections)))),
list(id, longitude2, latitude2)]
#Combining route and patient and pre-processing
agg_1 <- route %>% left_join(patient_1, by="global_id") %>%
mutate(infected_by = ifelse(is.na(infected_by),"Unk",infected_by)) %>%
as.data.table
agg_2 <- agg_1[, list(label=HTML(
paste(sep="<br>",
paste("Patient Id :", global_id),
paste("Sex :", sex),
paste("Country :", country),
paste("Disease :", disease),
paste("Group:", group),
paste("Infection_reason:", infection_reason),
paste("Infection_order:",  infection_order),
paste("Infected_by:", infected_by),
paste("Contact_number:", contact_number),
paste("Confirmed_date:", confirmed_date),
paste("State:", state)))),
list(global_id, longitude, latitude)]
listed <- list(agg_2, group_infec_3)
agg_3 <- rbindlist(listed, use.names = TRUE, fill = TRUE)
agg_3 %>%
leaflet() %>%
setView(128.5, 36.5, zoom = 7) %>%
addTiles() %>%
addProviderTiles("CartoDB.Positron") %>%
#addProviderTiles : Stamen.Toner, CartoDB.Positron, Esri.NatGeoWorldMap, MtbMap
addCircleMarkers(
lat =  ~ latitude,
lng =  ~ longitude,
label = ~label,
clusterOptions = markerClusterOptions(),
labelOptions = labelOptions(noHide = F,
direction = "left",
style = list(
"color" = "black",
"box-shadow" = "4px 4px rgba(0,0,0,0.25)",
"font-size" = "13px",
"border-color" = "rgba(0.5,3,0.5,0.5)"))) %>%
#Addding group infections
addMarkers(
lat =  ~ latitude2,
lng =  ~ longitude2,
label = ~label,
labelOptions = labelOptions(noHide = F,
direction = "right",
style = list(
"color" = "red",
"font-size" = "13px")))
# Get a data frame that contains both time and coordinates
case_bak <- subset(case, select = c(province, longitude, latitude))
geo_time <- merge(case_bak, timeprovince, by="province")
geo_time$date <- as.Date(geo_time$date, format = "%Y-%m-%d")
# Set Google API key
register_google(key = "AIzaSyCiHpBw6DsGxXs6pgfgQTd2tP4wAvzrmJI")
# Get Map from Google Maps API
map = get_googlemap(center = c(lon = 127.7669, lat = 35.9087),
zoom = 7, scale = 4,
maptype = 'roadmap',
color = 'color')
figure <- ggmap(map) +
theme_void() +
ggtitle("COVID-19 Cases in South Korea") +
scale_color_gradientn(colors = rainbow(5)) +
theme(plot.title = element_text(color = "blue"),
panel.border = element_rect(color = "grey", fill = NA, size = 2))
figure + geom_point(data = geo_time,
aes(longitude, latitude, size= confirmed,
color=confirmed, group=confirmed)) +
transition_time(date)
anim_save("anim.gif", figure)
# Get a data frame that contains both time and coordinates
case_bak <- subset(case, select = c(province, longitude, latitude))
geo_time <- merge(case_bak, timeprovince, by="province")
geo_time$date <- as.Date(geo_time$date, format = "%Y-%m-%d")
# Set Google API key
register_google(key = "AIzaSyCiHpBw6DsGxXs6pgfgQTd2tP4wAvzrmJI")
# Get Map from Google Maps API
map = get_googlemap(center = c(lon = 127.7669, lat = 35.9087),
zoom = 7, scale = 4,
maptype = 'roadmap',
color = 'color')
figure <- ggmap(map) +
theme_void() +
ggtitle("COVID-19 Cases in South Korea") +
scale_color_gradientn(colors = rainbow(5)) +
theme(plot.title = element_text(color = "blue"),
panel.border = element_rect(color = "grey", fill = NA, size = 2))
figure + geom_point(data = geo_time,
aes(longitude, latitude, size= confirmed,
color=confirmed, group=confirmed)) +
transition_time(date)
anim <- animate(figure + ease_aes('cubic-in-out'), fps = 10, end_pause = 25, height = 800, width = round(800/1.61803398875), renderer = gifski_renderer("anim.gif"))
# Get a data frame that contains both time and coordinates
case_bak <- subset(case, select = c(province, longitude, latitude))
geo_time <- merge(case_bak, timeprovince, by="province")
geo_time$date <- as.Date(geo_time$date, format = "%Y-%m-%d")
# Set Google API key
register_google(key = "AIzaSyCiHpBw6DsGxXs6pgfgQTd2tP4wAvzrmJI")
# Get Map from Google Maps API
map = get_googlemap(center = c(lon = 127.7669, lat = 35.9087),
zoom = 7, scale = 4,
maptype = 'roadmap',
color = 'color')
figure <- ggmap(map) +
theme_void() +
ggtitle("COVID-19 Cases in South Korea") +
scale_color_gradientn(colors = rainbow(5)) +
theme(plot.title = element_text(color = "blue"),
panel.border = element_rect(color = "grey", fill = NA, size = 2))
figure + geom_point(data = geo_time,
aes(longitude, latitude, size= confirmed,
color=confirmed, group=confirmed)) +
transition_time(date) +
animate(figure + ease_aes('cubic-in-out'), fps = 10, end_pause = 25, height = 800, width = round(800/1.61803398875), renderer = gifski_renderer("anim.gif"))
# Get a data frame that contains both time and coordinates
case_bak <- subset(case, select = c(province, longitude, latitude))
geo_time <- merge(case_bak, timeprovince, by="province")
geo_time$date <- as.Date(geo_time$date, format = "%Y-%m-%d")
# Set Google API key
register_google(key = "AIzaSyCiHpBw6DsGxXs6pgfgQTd2tP4wAvzrmJI")
# Get Map from Google Maps API
map = get_googlemap(center = c(lon = 127.7669, lat = 35.9087),
zoom = 7, scale = 4,
maptype = 'roadmap',
color = 'color')
figure <- ggmap(map) +
theme_void() +
ggtitle("COVID-19 Cases in South Korea") +
scale_color_gradientn(colors = rainbow(5)) +
theme(plot.title = element_text(color = "blue"),
panel.border = element_rect(color = "grey", fill = NA, size = 2))
figure + geom_point(data = geo_time,
aes(longitude, latitude, size= confirmed,
color=confirmed, group=confirmed)) +
transition_time(date)
animate(figure + ease_aes('cubic-in-out'), fps = 10, end_pause = 25, height = 800, width = round(800/1.61803398875), renderer = gifski_renderer("anim.gif"))
# Get a data frame that contains both time and coordinates
case_bak <- subset(case, select = c(province, longitude, latitude))
geo_time <- merge(case_bak, timeprovince, by="province")
geo_time$date <- as.Date(geo_time$date, format = "%Y-%m-%d")
# Set Google API key
register_google(key = "AIzaSyCiHpBw6DsGxXs6pgfgQTd2tP4wAvzrmJI")
# Get Map from Google Maps API
map = get_googlemap(center = c(lon = 127.7669, lat = 35.9087),
zoom = 7, scale = 4,
maptype = 'roadmap',
color = 'color')
figure <- ggmap(map) +
theme_void() +
ggtitle("COVID-19 Cases in South Korea") +
scale_color_gradientn(colors = rainbow(5)) +
theme(plot.title = element_text(color = "blue"),
panel.border = element_rect(color = "grey", fill = NA, size = 2))
figure + geom_point(data = geo_time,
aes(longitude, latitude, size= confirmed,
color=confirmed, group=confirmed)) +
transition_time(date)
cen = apply(route[,c('longitude','latitude')],2,mean)
map = get_googlemap(center = cen,
maptype = "roadmap",
zoom = 12)
# Set Google API key
register_google(key = "AIzaSyCiHpBw6DsGxXs6pgfgQTd2tP4wAvzrmJI")
# Get Map from Google Maps API
map = get_googlemap(center = c(lon = 127.7669, lat = 35.9087),
zoom = 7, scale = 4,
maptype = 'roadmap',
color = 'color')
ggmap(map) +
geom_point(data = route,
aes(x = longitude, y = latitude,col =  as.factor(id)), size = 5) +
geom_line(data = Route,
aes(x = longitude, y = latitude,col =  as.factor(id), group = as.factor(id)),
size = 2,alpha = 0.7) +
guides(col = FALSE) +
theme(text = element_text(size = 15, face = "bold"))
# Set Google API key
register_google(key = "AIzaSyCiHpBw6DsGxXs6pgfgQTd2tP4wAvzrmJI")
# Get Map from Google Maps API
map = get_googlemap(center = c(lon = 127.7669, lat = 35.9087),
zoom = 7, scale = 4,
maptype = 'roadmap',
color = 'color')
ggmap(map) +
geom_point(data = route,
aes(x = longitude, y = latitude,col =  as.factor(id)), size = 5) +
geom_line(data = route,
aes(x = longitude, y = latitude,col =  as.factor(id), group = as.factor(id)),
size = 2,alpha = 0.7) +
guides(col = FALSE) +
theme(text = element_text(size = 15, face = "bold"))
# Set Google API key
register_google(key = "AIzaSyCiHpBw6DsGxXs6pgfgQTd2tP4wAvzrmJI")
# Get Map from Google Maps API
map = get_googlemap(center = c(lon = 127.7669, lat = 35.9087),
zoom = 7, scale = 4,
maptype = 'roadmap',
color = 'color')
ggmap(map) +
geom_point(data = route,
aes(x = longitude, y = latitude,col =  as.factor(global_id)), size = 5) +
geom_line(data = route,
aes(x = longitude, y = latitude,col =  as.factor(global_id), group = as.factor(global_id)),
size = 2,alpha = 0.7) +
guides(col = FALSE) +
theme(text = element_text(size = 15, face = "bold"))
# Set Google API key
register_google(key = "AIzaSyCiHpBw6DsGxXs6pgfgQTd2tP4wAvzrmJI")
# Get Map from Google Maps API
map = get_googlemap(center = c(lon = 127.7669, lat = 35.9087),
zoom = 7, scale = 4,
maptype = 'roadmap',
color = 'color')
ggmap(map) +
geom_point(data = route,
aes(x = longitude, y = latitude,col =  as.factor(global_id)), size = 5) +
geom_line(data = route,
aes(x = longitude, y = latitude,col =  as.factor(global_id), group = as.factor(global_id)),
size = 2,alpha = 0.7) +
guides(col = FALSE) +
theme(text = element_text(size = 15, face = "bold"))
# Set Google API key
register_google(key = "AIzaSyCiHpBw6DsGxXs6pgfgQTd2tP4wAvzrmJI")
# Get Map from Google Maps API
map = get_googlemap(center = c(lon = 127.7669, lat = 35.9087),
zoom = 7, scale = 4,
maptype = 'roadmap',
color = 'color')
ggmap(map) +
geom_point(data = route,
aes(x = longitude, y = latitude,col =  as.factor(global_id)), size = 5) +
geom_line(data = route,
aes(x = longitude, y = latitude,col =  as.factor(global_id), group = as.factor(global_id)),
size = 2,alpha = 0.7) +
guides(col = FALSE) +
theme(text = element_text(size = 15, face = "bold"))
install.packages("htmlwidgets")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
tabl <- "  # simple table creation here
| Tables        | Are           | Cool  |
|---------------|:-------------:|------:|
| col 3 is      | right-aligned | $1600 |
| col 2 is      | centered      |   $12 |
| zebra stripes | are neat      |    $1 |
"
cat(tabl) # output the table in a format good for HTML/PDF/docx conversion
tabl <- "  Data Description
| Data          | Description   |
|---------------|:-------------:|
| col 3 is      | right-aligned |
| col 2 is      | centered      |
| zebra stripes | are neat      |
"
cat(tabl)
tabl <- "  Data Description
| Data          | Description   |
|---------------| ------------- |
| col 3 is      | right-aligned |
| col 2 is      | centered      |
| zebra stripes | are neat      |
"
cat(tabl)
install.packages("kable")
install.packages("kableextra")
View(time)
View(time)
View(route)
View(route)
View(seoulfloating)
View(seoulfloating)
# Set Google API key
register_google(key = "AIzaSyCiHpBw6DsGxXs6pgfgQTd2tP4wAvzrmJI")
# Set Google API key
register_google(key = "AIzaSyCiHpBw6DsGxXs6pgfgQTd2tP4wAvzrmJI")
library(tidyverse)
library(ggplot2)
library(ggmap)
library(gganimate)
library(tibbletime)
library(data.table)
library(htmltools)
library(leaflet)
library(scales)
# Set Google API key
register_google(key = "AIzaSyCiHpBw6DsGxXs6pgfgQTd2tP4wAvzrmJI")
# Get Map from Google Maps API
map = get_googlemap(center = c(lon = 127.7669, lat = 35.9087),
zoom = 7, scale = 4,
maptype = 'roadmap',
color = 'color')
route_selected <- filter(route, province = "Seoul")
# Set Google API key
register_google(key = "AIzaSyCiHpBw6DsGxXs6pgfgQTd2tP4wAvzrmJI")
# Get Map from Google Maps API
map = get_googlemap(center = c(lon = 127.7669, lat = 35.9087),
zoom = 7, scale = 4,
maptype = 'roadmap',
color = 'color')
route_selected <- filter(route, province == "Seoul")
ggmap(map) +
geom_point(data = route_selected,
aes(x = longitude, y = latitude,col =  as.factor(global_id)), size = 5) +
geom_line(data = route,
aes(x = longitude, y = latitude,col =  as.factor(global_id), group = as.factor(global_id)),
size = 2,alpha = 0.7) +
guides(col = FALSE) +
theme(text = element_text(size = 15, face = "bold"))
View(route_selected)
View(route_selected)
# Set Google API key
register_google(key = "AIzaSyCiHpBw6DsGxXs6pgfgQTd2tP4wAvzrmJI")
# Get Map from Google Maps API
map = get_googlemap(center = c(lon = 127.7669, lat = 35.9087),
zoom = 7, scale = 4,
maptype = 'roadmap',
color = 'color')
route_selected <- filter(route, province == "Busan")
ggmap(map) +
geom_point(data = route_selected,
aes(x = longitude, y = latitude,col =  as.factor(global_id)), size = 5) +
geom_line(data = route,
aes(x = longitude, y = latitude,col =  as.factor(global_id), group = as.factor(global_id)),
size = 2,alpha = 0.7) +
guides(col = FALSE) +
theme(text = element_text(size = 15, face = "bold"))
# Set Google API key
register_google(key = "AIzaSyCiHpBw6DsGxXs6pgfgQTd2tP4wAvzrmJI")
# Get Map from Google Maps API
map = get_googlemap(center = c(lon = 127.7669, lat = 35.9087),
zoom = 7, scale = 4,
maptype = 'roadmap',
color = 'color')
route_selected <- filter(route, province == "Jeju-do")
ggmap(map) +
geom_point(data = route_selected,
aes(x = longitude, y = latitude,col =  as.factor(global_id)), size = 5) +
geom_line(data = route,
aes(x = longitude, y = latitude,col =  as.factor(global_id), group = as.factor(global_id)),
size = 2,alpha = 0.7) +
guides(col = FALSE) +
theme(text = element_text(size = 15, face = "bold"))
# Set Google API key
register_google(key = "AIzaSyCiHpBw6DsGxXs6pgfgQTd2tP4wAvzrmJI")
# Get Map from Google Maps API
map = get_googlemap(center = c(lon = 127.7669, lat = 35.9087),
zoom = 7, scale = 4,
maptype = 'roadmap',
color = 'color')
route_selected <- head(route, 50)
ggmap(map) +
geom_point(data = route_selected,
aes(x = longitude, y = latitude,col =  as.factor(global_id)), size = 5) +
geom_line(data = route,
aes(x = longitude, y = latitude,col =  as.factor(global_id), group = as.factor(global_id)),
size = 2,alpha = 0.7) +
guides(col = FALSE) +
theme(text = element_text(size = 15, face = "bold"))
# Set Google API key
register_google(key = "AIzaSyCiHpBw6DsGxXs6pgfgQTd2tP4wAvzrmJI")
# Get Map from Google Maps API
map = get_googlemap(center = c(lon = 127.7669, lat = 35.9087),
zoom = 7, scale = 4,
maptype = 'roadmap',
color = 'color')
route_selected <- head(route, 50)
ggmap(map) +
geom_point(data = route_selected,
aes(x = longitude, y = latitude,col =  as.factor(local_id)), size = 5) +
geom_line(data = route,
aes(x = longitude, y = latitude,col =  as.factor(local_id), group = as.factor(global_id)),
size = 2,alpha = 0.7) +
guides(col = FALSE) +
theme(text = element_text(size = 15, face = "bold"))
# Set Google API key
register_google(key = "AIzaSyCiHpBw6DsGxXs6pgfgQTd2tP4wAvzrmJI")
# Get Map from Google Maps API
map = get_googlemap(center = c(lon = 127.7669, lat = 35.9087),
zoom = 7, scale = 4,
maptype = 'roadmap',
color = 'color')
route_selected <- filter(route, province == "Busan", global_id != NA)
ggmap(map) +
geom_point(data = route_selected,
aes(x = longitude, y = latitude,col =  as.factor(global_id)), size = 5) +
geom_line(data = route,
aes(x = longitude, y = latitude,col =  as.factor(global_id), group = as.factor(global_id)),
size = 2,alpha = 0.7) +
guides(col = FALSE) +
theme(text = element_text(size = 15, face = "bold"))
# Set Google API key
register_google(key = "AIzaSyCiHpBw6DsGxXs6pgfgQTd2tP4wAvzrmJI")
# Get Map from Google Maps API
map = get_googlemap(center = c(lon = 127.7669, lat = 35.9087),
zoom = 7, scale = 4,
maptype = 'roadmap',
color = 'color')
route_selected <- filter(route, global_id != NA)
ggmap(map) +
geom_point(data = route_selected,
aes(x = longitude, y = latitude,col =  as.factor(global_id)), size = 5) +
geom_line(data = route,
aes(x = longitude, y = latitude,col =  as.factor(global_id), group = as.factor(global_id)),
size = 2,alpha = 0.7) +
guides(col = FALSE) +
theme(text = element_text(size = 15, face = "bold"))
# Set Google API key
register_google(key = "AIzaSyCiHpBw6DsGxXs6pgfgQTd2tP4wAvzrmJI")
# Get Map from Google Maps API
map = get_googlemap(center = c(lon = 127.7669, lat = 35.9087),
zoom = 7, scale = 4,
maptype = 'roadmap',
color = 'color')
route %>% drop_na(global_id)
route_selected <- filter(route, province == "Busan")
ggmap(map) +
geom_point(data = route_selected,
aes(x = longitude, y = latitude,col =  as.factor(global_id)), size = 5) +
geom_line(data = route,
aes(x = longitude, y = latitude,col =  as.factor(global_id), group = as.factor(global_id)),
size = 2,alpha = 0.7) +
guides(col = FALSE) +
theme(text = element_text(size = 15, face = "bold"))
# Set Google API key
register_google(key = "AIzaSyCiHpBw6DsGxXs6pgfgQTd2tP4wAvzrmJI")
# Get Map from Google Maps API
map = get_googlemap(center = c(lon = 127.7669, lat = 35.9087),
zoom = 7, scale = 4,
maptype = 'roadmap',
color = 'color')
route %>% drop_na()
route_selected <- filter(route, province == "Busan")
ggmap(map) +
geom_point(data = route_selected,
aes(x = longitude, y = latitude,col =  as.factor(global_id)), size = 5) +
geom_line(data = route,
aes(x = longitude, y = latitude,col =  as.factor(global_id), group = as.factor(global_id)),
size = 2,alpha = 0.7) +
guides(col = FALSE) +
theme(text = element_text(size = 15, face = "bold"))
# Set Google API key
register_google(key = "AIzaSyCiHpBw6DsGxXs6pgfgQTd2tP4wAvzrmJI")
# Get Map from Google Maps API
map = get_googlemap(center = c(lon = 127.7669, lat = 35.9087),
zoom = 7, scale = 4,
maptype = 'roadmap',
color = 'color')
route %>%  %>%
# Set Google API key
register_google(key = "AIzaSyCiHpBw6DsGxXs6pgfgQTd2tP4wAvzrmJI")
# Get Map from Google Maps API
map = get_googlemap(center = c(lon = 127.7669, lat = 35.9087),
zoom = 7, scale = 4,
maptype = 'roadmap',
color = 'color')
route %>%
filter_all(any_vars(! is.na(.)))
route_selected <- filter(route, province == "Busan")
ggmap(map) +
geom_point(data = route_selected,
aes(x = longitude, y = latitude,col =  as.factor(global_id)), size = 5) +
geom_line(data = route,
aes(x = longitude, y = latitude,col =  as.factor(global_id), group = as.factor(global_id)),
size = 2,alpha = 0.7) +
guides(col = FALSE) +
theme(text = element_text(size = 15, face = "bold"))
w <- weather %>% group_by(date) %>% summarize(mean(avg_temp))
colnames(w) <- c("date","temperature")
t <- time %>% select(date,confirmed)
wt <- merge(w, t, by="date")
wt <- head(wt, 61)
fit <- lm(confirmed ~ temperature, data=wt)
summary(fit)
ggplot(wt, aes(x=temperature, y=confirmed)) +
geom_point(aes(color=date)) +
stat_smooth(method='lm') +
labs(title = "Temperature and Number of Confirmed Cases", x = "Temp", y= "Case")
w <- weather %>% group_by(date) %>% summarize(mean(avg_temp))
colnames(w) <- c("date","temperature")
t <- time %>% select(date,confirmed)
wt <- merge(w, t, by="date")
#wt <- head(wt, 61)
fit <- lm(confirmed ~ temperature, data=wt)
summary(fit)
w <- weather %>% group_by(date) %>% summarize(mean(avg_temp))
colnames(w) <- c("date","temperature")
t <- time %>% select(date,confirmed)
wt <- merge(w, t, by="date")
#wt <- head(wt, 61)
fit <- lm(confirmed ~ temperature, data=wt)
summary(fit)
w <- weather %>% group_by(date) %>% summarize(mean(avg_temp))
colnames(w) <- c("date","temperature")
t <- time %>% select(date,confirmed)
wt <- merge(w, t, by="date")
fit <- lm(confirmed ~ temperature, data=wt)
summary(fit)
